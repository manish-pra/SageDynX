env:
  start: [1.01, 1.01, 1.57, 1.01, 1.01, 2.01, 2.01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0] # px, py, phi, vx, vy, phi_dot
  # goal_state: [0.3, 0.3] # angles: 4.1831e-02,  1.8727e+00
  # goal_state: [-0.27, -0.32]
  # goal_state: [1.25, -1.26, 1.5]
  goal_state: [-0.7165,  1.0058,  2.9740,  0.2190,  2.1050,  2.3931,  0.7491]
  # [-7.4512e-01,  1.0033e+00,  2.1757e+00,  2.0711e-01,  1.7503e+00,
  #         1.8920e+00,  7.3453e-01]
  # goal_state: [0.01, 1.51, 1.07, 1.01, 1.01, 1.01, 1.01] # px, py, phi, vx, vy, phi_dot
  # goal_state: [0.01, 1.01, 1.57, 1.01, 1.01, 2.01, 2.01] 
  # goal_state: [0.5, 0.5, 0.5]
  terminate_state: [0.0, 0.0] # px, py, phi, vx, vy, phi_dot
  dynamics: 'manipulator' # "pendulum"
  urdf_model: "franka_panda/panda"
  base_link: "panda_link0"
  ee_link: "panda_link8" #"panda_link8"
  datax_idx: [0,1,2,3,4,5,6,7,8,9,10,11,12,13] 
  datau_idx: [0,1,2,3,4,5,6] # [0, 1] for pendulum
  prior_dyn_meas: True 
  train_data_has_derivatives: False
  num_features: 100
  n_data_x: 2
  n_data_u: 2
  unknown:
    partial: False
    component_idx: [12,13]
  friction:
    use: True
    dof_idx: [5,6]
    damping_coeff: [20.0, 30.0] # [0.1, 0.1] for pendulum
    mu: 0.5
    mu_dot: 0.1
    mu_ddot: 0.01
  params:
    m: 1.0
    l: 0.25
    g: 9.81
    J: 0.00383
    d: 0.1

agent:
  g_dim :
    ny : 2
    nx : 14
    nu : 7
  dim :
    ny : 14 # perhaps redundant?
    nx : 14
    nu : 7
  Dyn_gp_lengthscale :
      y1 : [5.2649, 4.5967, 7.0177] # y1 : [5.2649, 4.5967, 7.0177] #[2.6384, 2.5857, 2.5669]
      y2 : [3.9696, 2.1265, 6.6749] # y2 : [3.9696, 2.1265, 6.6749] #[2.1422, 2.7733, 2.1221]
      val : 2.4
  Dyn_gp_noise : 1.0e-6
  Dyn_gp_outputscale : 
    y1 : 0.1040 #0.3040 #0.75  #0.65
    y2 : 0.1071 #0.3071 #0.65 #0.455, noise multiplier 3.0e-7 results in smooth trajectories
    both : [0.65, 0.55] #[65,55] #[0.65, 0.55]
  Dyn_gp_task_noises : 
    val : [3.8, 1.27, 3.8, 1.27]
    multiplier : 1.0e-5                     #1.0e-5 Low noise value make it crazy fast
  Dyn_gp_beta : 3.5 # 1.5
  mean_shift_val : 2
  cov_module: 'Matern'     #'Matern', Sq_exp
  num_dyn_samples: 5 
  mean_as_dyn_sample: False
  true_dyn_as_sample: False        # This is for debugging, set num_dyn_samples to 1
  Dyn_gp_jitter: 1.0e-6
  Dyn_gp_variance_is_zero: 1.1e-6
  Dyn_gp_min_data_dist: 1.0e-4
  tight:
    use: False
    dyn_eps: 0.001
    Lipschitz: 1.015
    w_bound: 0.007
  shift_soln: True
  load_training_data: False
  run:
    optimistic: False
    pessimistic: True
    true_param_as_sample: False # Debug mode
    variance_cost: False
  BLR:
    lambda_reg: 1.0e-6
    noise_var: 5.0e-10
  feat_len: 21
  
visu:
  show: True
  traj_file_name: "data_lap1.pkl"
  training_data_file_name: "training_data_lap1.pkl"

common:
  use_cuda : False
  use_BLR : True
  active_learning:
    use: True
    frequency: 1
  num_MPC_itrs : 50
  dynamics_rejection: False

optimizer:
  H : 50 # horizon
  u_min : [-1000, -1000,-1000, -1000,-1000, -1000,-1000] # Minimum control input
  u_max : [1000, 1000, 1000, 1000, 1000, 1000, 1000]          
  # u_min : [-30, -30] # Minimum control input
  # u_max : [30, 30] 
  x_min : [-3.1417, -3.1417,-3.1417, -3.1417,-3.1417, -3.1417,-3.1417, -10.0, -10.0,-10.0, -10.0,-10.0, -10.0,-10.0] # Minimum state value
  x_max : [ 3.1417, 3.1417,3.1417, 3.1417,3.1417, 3.1417, 3.1417, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0, 10.0] # x,y,v,theta,theta_dot
  linear_solver : 'ma57' #
  oracle:
    max_sqp_iter: 10
    tol_nlp: 1.0e-6
  SEMPC:
    max_sqp_iter: 1
    tol_nlp: 1.0e-4 
  order: 2
  x_dim: 2
  dt: 0.02 # 0.010
  w: 50
  Qx: [200, 200, 200,200, 200, 200,200] # use 500,500 for angles [1.0, 1.0, 1.0, 1.0]  
  # Qx: [50, 50, 50] # [1.0, 1.0, 1.0, 1.0]
  Qu: [0.02, 0.02,0.02, 0.02,0.02, 0.02,0.02]
  cost: "expected" 
  options: {
    levenberg_marquardt: 1.1e-16
  }
  terminal_tightening:
    x_tight: [0.1, 0.1]
    u_tight: [0.1]
    # P:  [[2.48651083, 1.48325991],[1.48325991, 2.65037241]]
    P:  [[1.0, 0.0],[0.0, 1.0]]
    delta: 1.0


optimistic_optimizer:
  H : 30 # horizon
  u_min : [-5, -5, -0.3, -0.3, -0.3,-0.3, -0.3, -0.3] # Minimum control input
  u_max : [5, 5, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3]          
  x_min : [-5, -5, -3.1417, -2, -2, -1] # Minimum state value
  x_max : [ 5, 5, 3.1417, 2, 2, 1] # x,y,v,theta,theta_dot
  linear_solver : 'ma57' #
  oracle:
    max_sqp_iter: 10
    tol_nlp: 1.0e-6
  SEMPC:
    max_sqp_iter: 1
    tol_nlp: 1.0e-4 
  order: 2
  x_dim: 2
  dt: 0.1 # 0.010
  w: 50
  Qx: [5, 5] # [1.0, 1.0, 1.0, 1.0]  
  Qu: [1, 1, 1, 1, 1, 1,1, 1]
  cost: "expected" 
  options: {
    levenberg_marquardt: 10.0
  }
  terminal_tightening:
    x_tight: [0.1, 0.1]
    u_tight: [0.1]
    P:  [[2.48651083, 1.48325991],[1.48325991, 2.65037241]]
    delta: 1.0

experiment:
  name: "DEMPC" #
  generate_regret_plot : True
  folder: "manipulator"
  rnd_seed: 
    use: False
    value: 123456